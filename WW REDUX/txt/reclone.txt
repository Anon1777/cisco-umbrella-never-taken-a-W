{% extends 'layout.html' %} 
{% block styles %}
<link href='{{url_for("static", filename="stylesheets/admin.css")}}' rel='stylesheet'/>
<script src="https://cdnjs.cloudflare.com/ajax/libs/corejs-typeahead/1.2.1/bloodhound.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/corejs-typeahead/1.2.1/typeahead.jquery.min.js"></script>
{% endblock %} 

{% block navbar %}
  {% include "leaderboard/navbar.html" %}
{% endblock %}

{% block styles %}
    <link href='{{url_for("static", filename="stylesheets/leaderboard.css")}}' rel='stylesheet'/>
{% endblock %}


{% block content %}
    <h1>Data Dump Page</h1>
    <p>{{test}}</p>
    <table class="dump">
      {% for row in teams %}
      <tr>
        <p>{{row[0]}}</p>
      </tr>
      {% endfor %}
    </table>
    <table class="dump">
      <tr>
        <p>{{station_dump}}</p>
      </tr>
    </table>
    <table>
      <tr>
        <p>{{shooter_dump}}</p>
      </tr>
    </table>
    <table class="dump">
      <tr>
        <p>{{score_dump}}</p>
      </tr>
    </table>
    

{% endblock %}    
{% block scripts %}
  <script src="{{ url_for('static', filename='javascript/leaderboard.js') }}"></script> 
{% endblock %}


from db import get_db
import sqlite3
from shooters import get_shooters
from flask import Blueprint, render_template, session
from db import get_db
import sqlite3

leaderboard_bp = Blueprint('leaderboard', __name__)

# Root Page
@leaderboard_bp.route('/')
def index():
    print('Rendering')
    return render_template('leaderboard/index.html')


@leaderboard_bp.route('/shooters')
def shooters():
    shooters_list_lc1 = [
        {"name": "ONEINAMILLIONWEARETWICE", "score": 999999},
        {"name": "Im Nayeon", "score": 9229},
        {"name": "Yoo Jeongyeon", "score": 1190}
    ]
    shooters_list_lc2 = [
        {"name": "Hirai Momo", "score": 11964},
        {"name": "Minatozaki Sana", "score": 122912},
        {"name": "Park Jihyo", "score": 2121},
        {"name": "Myoui Mina", "score": 32437}
    ]
    shooters_list_lc3 = [
        {"name": "Kim Dahyun", "score": 5287},
        {"name": "Son Chaeyoung", "score": 42329},
        {"name": "Chou Tzuyu", "score": 61425}
    ]





    return render_template('leaderboard/shooters.html', shooters_list_lc1=shooters_list_lc1, shooters_list_lc2=shooters_list_lc2, shooters_list_lc3=shooters_list_lc3)


@leaderboard_bp.route('/teams')
def teams():
    teams_list_lc1 = [
        {"name": "Tacos", "score": 9999999999999999},
        {"name": "Burritos", "score": 981723},
        {"name": "not so sketchy flantos", "score": 17980},
        {"name": "not so sketchy flantos", "score": 17980}
    ]
    teams_list_lc2 = [
        {"name": "the gordidas", "score": 1132734},
        {"name": "the chicaronnes", "score": 122233},
        {"name": "the quesadillas", "score": 289321},
        {"name": "The Enchiladas", "score": 32437},
        {"name": "The Enchiladas", "score": 32437}
    ]
    teams_list_lc3 = [
        {"name": "the pastors", "score": 57237},
        {"name": "the Beefy barbacoa", "score": 423329},
        {"name": "The Queso Fresco", "score": 392825}
    ]

    return render_template('leaderboard/teams.html', teams_list_lc1=teams_list_lc1, teams_list_lc2=teams_list_lc2, teams_list_lc3=teams_list_lc3)

@leaderboard_bp.route('/stations')
def stations():
    return render_template('leaderboard/stations.html')

@leaderboard_bp.route('/top_shooters')
def getShooterList():
    return str (get_shooters(limit=3))


connection = get_db()
sql = connection.cursor()
dump = sql.fetchall()

def team_dump():
    sql.execute('''SELECT name FROM teams WHERE id IS NOT NULL''')
    return dump

def shooter_dump():
    sql.execute('''select name from shooters where id is not NULL''')
    return dump

def score_dump():
    sql.execute('''select score from scores where id is not NULL''')
    return dump

def station_dump():
    sql.execute('''select station_number, station_type from stations where id is not NULL''')
    return dump

def test():
    print("Hello, World!")

@leaderboard_bp.route('dump')
def dump():
    return render_template('leaderboard/dump.html', test=test, team_dump=team_dump, shooter_dump=shooter_dump, score_dump=score_dump, station_dump=station_dump)



# --------- non-routing functions here:  ---------

def rand_name():
    alphabet = 'qwertyuiopasdfghjklzxcvbnm '
    returned = ''
    for i in range(10):
        returned = returned + choice(alphabet)
    return returned
 
def team_data():
    connection = get_db()
    sql = connection.cursor()
    team_list = []
    for i in range(5):
        sql.execute('''insert into teams (name) values
                  (?)''', [rand_name()])
        team_list.append(i)
    return team_list
       
 
def shooters_data():
    connection = get_db()
    sql = connection.cursor()
    shooter_list = []
    for i in range(25):
        sql.execute('''insert into shooters (name) values
                  (?)''', [rand_name()])
        shooter_list.append(i)
    return shooter_list
 
 
def station_data():
    connection = get_db()
    sql = connection.cursor()
    station_list = []
    for i in range(3):
        sql.execute('''insert into teams (station_number, station_type) values
                  (?)''', [i+1, 'Individual'])
        station_list.append[i]
    return station_list
 
def add_sample_data():
    connection = get_db()
    sql = connection.cursor()
    teamids = team_data()
    shooterids = shooters_data()
    stationids = station_data()
    for team in teamids:
        for i in range(5):
            for station in stationids:
                for i in range(6):
                    shooter = team*5 + i
                    sql.execute('''insert into scores (stationid, shooterid, teamid, score) values (?,?,?,?)''', [station,shooterids[shooter],team,randint(1,50)*100])



